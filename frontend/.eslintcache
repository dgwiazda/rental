[{"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\index.js":"1","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\store.js":"2","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\App.js":"3","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\serviceWorker.js":"4","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\NoMatch.js":"5","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\BoardAdmin.js":"6","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\Contact.js":"7","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\Home.js":"8","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\Content.js":"9","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\SignIn.js":"11","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\SignUp.js":"12","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\ZestawDoNart.js":"13","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\WorekTreningowy.js":"14","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\ZestawDoHokeja.js":"15","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\SzynaCmp.js":"16","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Mata.js":"17","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\RowerStacjonarny.js":"18","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\ZestawSnowboardowy.js":"19","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Orlik.js":"20","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Stadion.js":"21","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Kajak.js":"22","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Spadochron.js":"23","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Bieznia.js":"24","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Hala.js":"25","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Rower.js":"26","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\ZestawWspinaczkowy.js":"27","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderBieznia.js":"28","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderSpadochron.js":"29","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderOrlik.js":"30","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderKajak.js":"31","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderMata.js":"32","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderRowerStacjonarny.js":"33","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderRower.js":"34","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderStadion.js":"35","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderZestawDoHokeja.js":"36","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderZestawWspinaczkowy.js":"37","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderSzynaCmp.js":"38","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderWorekTreningowy.js":"39","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\message.js":"40","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderZestawSnowboardowy.js":"41","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\helpers\\history.js":"42","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderHala.js":"43","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderZestawDoNart.js":"44","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\reducers\\index.js":"45","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\admin.js":"46","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\Categories.js":"47","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\auth.js":"48","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\order.js":"49","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\Jumbotron.js":"50","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\types.js":"51","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\admin.service.js":"52","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\product.service.js":"53","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\reducers\\message.js":"54","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\reducers\\auth.js":"55","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\order.service.js":"56","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\auth.service.js":"57","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\auth-header.js":"58","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\OrderList.js":"59","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\user.service.js":"60","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\Profile.js":"61","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\user.js":"62","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\NavigationBar.js":"63"},{"size":573,"mtime":1599102413000,"results":"64","hashOfConfig":"65"},{"size":344,"mtime":1610309490826,"results":"66","hashOfConfig":"65"},{"size":5605,"mtime":1612613496769,"results":"67","hashOfConfig":"65"},{"size":5086,"mtime":1599102413000,"results":"68","hashOfConfig":"65"},{"size":479,"mtime":1611329814130,"results":"69","hashOfConfig":"65"},{"size":13597,"mtime":1613084164794,"results":"70","hashOfConfig":"65"},{"size":1568,"mtime":1608291072304,"results":"71","hashOfConfig":"65"},{"size":626,"mtime":1611067722371,"results":"72","hashOfConfig":"65"},{"size":1621,"mtime":1612527082190,"results":"73","hashOfConfig":"65"},{"size":3865,"mtime":1612444499410,"results":"74","hashOfConfig":"65"},{"size":4365,"mtime":1612476550830,"results":"75","hashOfConfig":"65"},{"size":5484,"mtime":1612473974055,"results":"76","hashOfConfig":"65"},{"size":3719,"mtime":1612348942698,"results":"77","hashOfConfig":"65"},{"size":3942,"mtime":1612348895408,"results":"78","hashOfConfig":"65"},{"size":3513,"mtime":1612348921090,"results":"79","hashOfConfig":"65"},{"size":2012,"mtime":1612348848191,"results":"80","hashOfConfig":"65"},{"size":2470,"mtime":1612348736487,"results":"81","hashOfConfig":"65"},{"size":3514,"mtime":1612348794697,"results":"82","hashOfConfig":"65"},{"size":3431,"mtime":1612348964333,"results":"83","hashOfConfig":"65"},{"size":2501,"mtime":1612348757863,"results":"84","hashOfConfig":"65"},{"size":2397,"mtime":1612348828183,"results":"85","hashOfConfig":"65"},{"size":2026,"mtime":1612348723140,"results":"86","hashOfConfig":"65"},{"size":2263,"mtime":1612348809094,"results":"87","hashOfConfig":"65"},{"size":3094,"mtime":1612348654426,"results":"88","hashOfConfig":"65"},{"size":2449,"mtime":1612348677210,"results":"89","hashOfConfig":"65"},{"size":3656,"mtime":1612348775888,"results":"90","hashOfConfig":"65"},{"size":3469,"mtime":1612348983188,"results":"91","hashOfConfig":"65"},{"size":7159,"mtime":1613123233633,"results":"92","hashOfConfig":"65"},{"size":6163,"mtime":1612886604650,"results":"93","hashOfConfig":"65"},{"size":10327,"mtime":1613129789718,"results":"94","hashOfConfig":"65"},{"size":7211,"mtime":1613087854866,"results":"95","hashOfConfig":"65"},{"size":7229,"mtime":1613087897011,"results":"96","hashOfConfig":"65"},{"size":7265,"mtime":1613087911468,"results":"97","hashOfConfig":"65"},{"size":9440,"mtime":1613087327679,"results":"98","hashOfConfig":"65"},{"size":9276,"mtime":1613129935329,"results":"99","hashOfConfig":"65"},{"size":7276,"mtime":1613087944850,"results":"100","hashOfConfig":"65"},{"size":7263,"mtime":1613087990247,"results":"101","hashOfConfig":"65"},{"size":6133,"mtime":1612886223875,"results":"102","hashOfConfig":"65"},{"size":9130,"mtime":1613087931519,"results":"103","hashOfConfig":"65"},{"size":221,"mtime":1610308279595,"results":"104","hashOfConfig":"65"},{"size":7278,"mtime":1613087980211,"results":"105","hashOfConfig":"65"},{"size":97,"mtime":1610309594662,"results":"106","hashOfConfig":"65"},{"size":10165,"mtime":1613129374023,"results":"107","hashOfConfig":"65"},{"size":7249,"mtime":1613087968446,"results":"108","hashOfConfig":"65"},{"size":168,"mtime":1610308487299,"results":"109","hashOfConfig":"65"},{"size":360,"mtime":1612282165795,"results":"110","hashOfConfig":"65"},{"size":5983,"mtime":1611334970923,"results":"111","hashOfConfig":"65"},{"size":2083,"mtime":1612274371596,"results":"112","hashOfConfig":"65"},{"size":345,"mtime":1612351762696,"results":"113","hashOfConfig":"65"},{"size":1085,"mtime":1608559120141,"results":"114","hashOfConfig":"65"},{"size":728,"mtime":1613051175438,"results":"115","hashOfConfig":"65"},{"size":2465,"mtime":1612290085290,"results":"116","hashOfConfig":"65"},{"size":253,"mtime":1612348560774,"results":"117","hashOfConfig":"65"},{"size":406,"mtime":1612275012723,"results":"118","hashOfConfig":"65"},{"size":1206,"mtime":1612275276295,"results":"119","hashOfConfig":"65"},{"size":6189,"mtime":1613126531955,"results":"120","hashOfConfig":"65"},{"size":729,"mtime":1610314411660,"results":"121","hashOfConfig":"65"},{"size":221,"mtime":1611056431847,"results":"122","hashOfConfig":"65"},{"size":6309,"mtime":1613084180324,"results":"123","hashOfConfig":"65"},{"size":1959,"mtime":1613052465795,"results":"124","hashOfConfig":"65"},{"size":7199,"mtime":1612487423220,"results":"125","hashOfConfig":"65"},{"size":3543,"mtime":1613051346983,"results":"126","hashOfConfig":"65"},{"size":2126,"mtime":1612613433624,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"13nvw1u",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"130"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"130"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"130"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"130"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\index.js",[],["269","270"],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\store.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\App.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\NoMatch.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\BoardAdmin.js",["271"],"import React, { useState, useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nimport AdminService from \"../services/admin.service\";\n\nimport { messageChangeAvailiable } from \"../actions/admin\";\n\nimport styled from \"styled-components\";\nimport {\n  Container,\n  Button,\n  Table,\n  NavDropdown,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { setMessage } from \"../actions/message\";\n\nconst Styles = styled.div`\n  .container {\n    margin-top: 56px;\n\n    #access-denied {\n      margin: 150px;\n    }\n    .btn-group {\n      display: flex;\n      padding-top: 15px;\n      margin-bottom: 15px;\n    }\n    .dropdown {\n      a {\n        float: right;\n        color: rgba(0, 0, 0, 0.7);\n      }\n\n      .dropdown-menu {\n        a:hover {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n\n    #cancel {\n      float: right;\n    }\n\n    #secondary-buttons {\n      width: 300px;\n      float: right;\n    }\n  }\n`;\n\nconst BoardAdmin = () => {\n  const [orders, setOrders] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [productsSort, setProductsSort] = useState(0);\n  const [users, setUsers] = useState([]);\n  const [show, setShow] = useState(0);\n  const [access, setAccess] = useState(false);\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const [chartData, setChartData] = useState([]);\n  const [chartLabel, setChartLabel] = useState([]);\n  const [chartLegend, setChartLegend] = useState([]);\n  const { message } = useSelector((state) => state.message);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (currentUser) {\n      setAccess(currentUser.roles.includes(\"ROLE_ADMIN\"));\n    }\n    getOrders();\n  }, [currentUser]);\n\n  const getOrders = async () => {\n    await AdminService.getOrders().then((response) => {\n      setOrders(response.data);\n    });\n    setShow(1);\n  };\n  const ordersSetProducts = (id, count) => {\n    var products = \"\";\n    for (var i = 0; i < count; i++) {\n      if (i === count - 1) {\n        products += id + i;\n      } else {\n        products += id + i + \", \";\n      }\n    }\n    return products;\n  };\n  const sortOrdersByRentDateFromAsc = () => {\n    AdminService.sortOrdersByRentDateFromAsc().then((response) => {\n      setOrders(response.data);\n    });\n  };\n  const sortOrdersByRentDateFromDesc = () => {\n    AdminService.sortOrdersByRentDateFromDesc().then((response) => {\n      setOrders(response.data);\n    });\n  };\n  const sortOrdersByPriceAsc = () => {\n    AdminService.sortOrdersByPriceAsc().then((response) => {\n      setOrders(response.data);\n    });\n  };\n  const sortOrdersByPriceDesc = () => {\n    AdminService.sortOrdersByPriceDesc().then((response) => {\n      setOrders(response.data);\n    });\n  };\n  const sortOrdersByUserAsc = () => {\n    AdminService.sortOrdersByUser().then((response) => {\n      setOrders(response.data);\n    });\n  };\n\n  const getProducts = () => {\n    AdminService.getProducts().then((response) => {\n      setProducts(response.data);\n    });\n    setProductsSort(0);\n    setShow(2);\n  };\n  const sortProductsByPriceAsc = () => {\n    AdminService.sortProductsByPriceAsc().then((response) => {\n      setProducts(response.data);\n    });\n    setProductsSort(1);\n  };\n  const sortProductsByPriceDesc = () => {\n    AdminService.sortProductsByPriceDesc().then((response) => {\n      setProducts(response.data);\n    });\n    setProductsSort(2);\n  };\n  const sortProductsByIdAsc = () => {\n    AdminService.sortProductsByIdAsc().then((response) => {\n      setProducts(response.data);\n    });\n    setProductsSort(3);\n  };\n  const sortProductsByIdDesc = () => {\n    AdminService.sortProductsByIdDesc().then((response) => {\n      console.log(response);\n      setProducts(response.data);\n    });\n    setProductsSort(4);\n  };\n  const changeAvailiable = async (id) => {\n    await dispatch(messageChangeAvailiable(id)).then(() => {\n      alert(message);\n    });\n    if (productsSort === 0) {\n      AdminService.getProducts().then((response) => {\n        setProducts(response.data);\n      });\n    }\n    if (productsSort === 1) {\n      AdminService.sortProductsByPriceAsc().then((response) => {\n        setProducts(response.data);\n      });\n    }\n    if (productsSort === 2) {\n      AdminService.sortProductsByPriceDesc().then((response) => {\n        setProducts(response.data);\n      });\n    }\n    if (productsSort === 3) {\n      AdminService.sortProductsByIdAsc().then((response) => {\n        setProducts(response.data);\n      });\n    }\n    if (productsSort === 4) {\n      AdminService.sortProductsByIdDesc().then((response) => {\n        setProducts(response.data);\n      });\n    }\n  }\n\n  const getUsers = () => {\n    AdminService.getUsers().then((response) => {\n      setUsers(response.data);\n    });\n    setShow(3);\n  };\n  const sortUsersByUsernameAsc = () => {\n    AdminService.sortUsersByUsernameAsc().then((response) => {\n      setUsers(response.data);\n    });\n  };\n  const sortUsersByUsernameDesc = () => {\n    AdminService.sortUsersByUsernameDesc().then((response) => {\n      setUsers(response.data);\n    });\n  };\n  const sortUsersByEmailAsc = () => {\n    AdminService.sortUsersByEmailAsc().then((response) => {\n      setUsers(response.data);\n    });\n  };\n  const sortUsersByEmailDesc = () => {\n    AdminService.sortUsersByEmailDesc().then((response) => {\n      setUsers(response.data);\n    });\n  };\n\n  const getMonthly = () => {\n    AdminService.getMonthlySales().then((response) => {\n      response.data.push(0);\n      setChartData(response.data);\n    });\n    setChartLabel(\"Sprzedaż miesięczna tego roku\");\n    setChartLegend([\n      \"Styczeń\",\n      \"Luty\",\n      \"Marzec\",\n      \"Kwiecień\",\n      \"Maj\",\n      \"Czerwiec\",\n      \"Lipiec\",\n      \"Sierpień\",\n      \"Wrzesień\",\n      \"Październik\",\n      \"Listopad\",\n      \"Grudzień\",\n    ]);\n  }\n\n  const getAnnually = async () => {\n    var l;\n    await AdminService.getAnnuallySales().then((response) => {\n      setChartData(response.data);\n      l = response.data.length;\n    });\n    setChartLabel(\"Sprzedaż roczna\");\n    let years = [];\n    for (var i = 0; i < l; i++) {\n      years.push(2021 + i);\n    }\n    setChartLegend(years);\n  }\n\n  const getChart = () => {\n    getMonthly();\n    setShow(4);\n  };\n\n  return (\n    <div>\n      {access ? (\n        <Styles>\n          <Container>\n            <ButtonGroup aria-label=\"Basic example\">\n              <Button variant=\"secondary\" onClick={getOrders}>\n                Zamówienia\n              </Button>\n              <Button variant=\"secondary\" onClick={getProducts}>\n                Produkty\n              </Button>\n              <Button variant=\"secondary\" onClick={getUsers}>\n                Użytkownicy\n              </Button>\n              <Button variant=\"secondary\" onClick={getChart}>\n                Przychód\n              </Button>\n            </ButtonGroup>\n\n            {/* ORDERS */}\n            {show === 1 && (\n              <div>\n                <NavDropdown title=\"Sortuj\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item onClick={sortOrdersByRentDateFromAsc}>\n                    najbliższe\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortOrdersByRentDateFromDesc}>\n                    najdalsze\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortOrdersByPriceDesc}>\n                    najdroższe\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortOrdersByPriceAsc}>\n                    najtańsze\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortOrdersByUserAsc}>\n                    użytkownik\n                  </NavDropdown.Item>\n                </NavDropdown>\n                <Table striped bordered hover variant=\"dark\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Od</th>\n                      <th>Do</th>\n                      <th>Cena</th>\n                      <th>Username</th>\n                      <th>Produkty ID</th>\n                      <th>Produkt</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {orders.map((order) => (\n                      <tr key={order.id}>\n                        <td>{order.id}</td>\n                        <td>{order.rentDateFrom}</td>\n                        <td>{order.rentDateTo}</td>\n                        <td>{order.price}zł</td>\n                        <td>{order.user}</td>\n                        <td>\n                          {ordersSetProducts(order.productId, order.quantity)}\n                        </td>\n                        <td>{order.productName}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            )}\n\n            {/* Products */}\n            {show === 2 && (\n              <div>\n                <NavDropdown title=\"Sortuj\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item onClick={sortProductsByPriceDesc}>\n                    najdroższe\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortProductsByPriceAsc}>\n                    najtańsze\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortProductsByIdAsc}>\n                    rosnąco\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortProductsByIdDesc}>\n                    malejąco\n                  </NavDropdown.Item>\n                </NavDropdown>\n                <Table striped bordered hover variant=\"dark\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Produkt</th>\n                      <th>Kategoria</th>\n                      <th>Cena</th>\n                      <th>Opis</th>\n                      <th>Dostępny</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {products.map((product) => (\n                      <tr key={product.id}>\n                        <td>{product.id}</td>\n                        <td>{product.productType}</td>\n                        <td>{product.category}</td>\n                        <td>{product.price}zł</td>\n                        <td>{product.description}</td>\n                        <td>\n                          {product.availiable.toString()}\n                          <Button\n                            id=\"cancel\"\n                            variant=\"warning\"\n                            onClick={() => changeAvailiable(product.id)}\n                          >\n                            Change\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            )}\n\n            {/* Users */}\n            {show === 3 && (\n              <div>\n                <NavDropdown title=\"Sortuj\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item onClick={sortUsersByUsernameAsc}>\n                    nazwa rosnąco\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortUsersByUsernameDesc}>\n                    nazwa malejąco\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortUsersByEmailAsc}>\n                    email rosnąco\n                  </NavDropdown.Item>\n                  <NavDropdown.Item onClick={sortUsersByEmailDesc}>\n                    email malejąco\n                  </NavDropdown.Item>\n                </NavDropdown>\n                <Table striped bordered hover variant=\"dark\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Nazwa użytkownika</th>\n                      <th>Email</th>\n                      <th>Ilość zamówień</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {users.map((user) => (\n                      <tr key={user.id}>\n                        <td>{user.id}</td>\n                        <td>{user.username}</td>\n                        <td>{user.email}</td>\n                        <td>{user.ordersCount}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </div>\n            )}\n\n            {/* Sales */}\n            {show === 4 && (\n              <div>\n                <ButtonGroup id=\"secondary-buttons\">\n                  <Button variant=\"info\" onClick={getMonthly}>\n                    Miesięczny\n                  </Button>\n                  <Button variant=\"info\" onClick={getAnnually}>\n                    Roczny\n                  </Button>\n                </ButtonGroup>\n                <Bar\n                  data={{\n                    labels: chartLegend,\n                    datasets: [\n                      {\n                        label: chartLabel,\n                        data: chartData,\n                        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n                        borderColor: \"rgba(255, 99, 132, 1)\",\n                        borderWidth: 1,\n                      },\n                    ],\n                  }}\n                />\n              </div>\n            )}\n          </Container>\n        </Styles>\n      ) : (\n        <Styles>\n          <Container>\n            <h1 id=\"access-denied\">Access Denied</h1>\n          </Container>\n        </Styles>\n      )}\n    </div>\n  );\n};\n\nexport default BoardAdmin;\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\Contact.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\Home.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\Content.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\SignIn.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\SignUp.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\ZestawDoNart.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\WorekTreningowy.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\ZestawDoHokeja.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\SzynaCmp.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Mata.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\RowerStacjonarny.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\ZestawSnowboardowy.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Orlik.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Stadion.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Kajak.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Spadochron.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Bieznia.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Hala.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\Rower.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\products\\ZestawWspinaczkowy.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderBieznia.js",["272","273"],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderSpadochron.js",["274","275","276","277"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction OrderSpadochron() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 1;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 29;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getSpadochronUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getSpadochronBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Spadochron{\" \"}\r\n                  {availiableQuantity  ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderSpadochron;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderOrlik.js",["278","279"],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderKajak.js",["280","281"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderKajak() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 3;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 5;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2, 3];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getKajakUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getKajakBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Kajak{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option\r\n                            disabled={!options.includes(option)}\r\n                            key={index}\r\n                            className={\r\n                              options.includes(option)\r\n                                ? \"\"\r\n                                : \"select-disabled disabled\"\r\n                            }\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderKajak;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderMata.js",["282","283"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderMata() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 10;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 8;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getMataUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getMataBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Mata{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option\r\n                            disabled={!options.includes(option)}\r\n                            key={index}\r\n                            className={\r\n                              options.includes(option)\r\n                                ? \"\"\r\n                                : \"select-disabled disabled\"\r\n                            }\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderMata;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderRowerStacjonarny.js",["284","285"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderRowerStacjonarny() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 2;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 27;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getRowerStacjonarnyUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getRowerStacjonarnyBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Rower stacjonarny{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option\r\n                            disabled={!options.includes(option)}\r\n                            key={index}\r\n                            className={\r\n                              options.includes(option)\r\n                                ? \"\"\r\n                                : \"select-disabled disabled\"\r\n                            }\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderRowerStacjonarny;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderRower.js",["286","287","288"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { clearMessage } from \"../../actions/message\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #type {\r\n      width: 200px;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderRower() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 2;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const [itemIdDb, setItemIdDb] = useState(21);\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const [title, setTitle] = useState(\" - kolażówka\");\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getRowerKolazowkaUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    if (itemIdDb === 21) {\r\n      OrderService.getRowerKolazowkaBusy(\r\n        moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n        moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n      ).then((response) => {\r\n        setBusyProducts(response.data);\r\n        setBusyProductCount(response.data.length);\r\n      });\r\n    }\r\n    if (itemIdDb === 23) {\r\n      OrderService.getRowerGorskiBusy(\r\n        moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n        moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n      ).then((response) => {\r\n        setBusyProducts(response.data);\r\n        setBusyProductCount(response.data.length);\r\n      });\r\n    }\r\n    if (itemIdDb === 25) {\r\n      OrderService.getRowerMiejskiBusy(\r\n        moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n        moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n      ).then((response) => {\r\n        setBusyProducts(response.data);\r\n        setBusyProductCount(response.data.length);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var arr = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    console.log(orderableCount);\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        arr.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(arr);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const onTypeChange = (e) => {\r\n    dispatch(clearMessage());\r\n    if (e.target.value === \"kolażówka\") {\r\n      setTitle(\" - kolażówka\");\r\n      OrderService.getRowerKolazowkaUnavailiable().then((response) => {\r\n        var len = response.data.length;\r\n        setAvailiableQuantity(availiableQuantityMax - len);\r\n      });\r\n      setItemIdDb(21);\r\n    }\r\n    if (e.target.value === \"górski\") {\r\n      setTitle(\" - górski\");\r\n      OrderService.getRowerGorskiUnavailiable().then((response) => {\r\n        var len = response.data.length;\r\n        setAvailiableQuantity(availiableQuantityMax - len);\r\n      });\r\n      setItemIdDb(23);\r\n    }\r\n    if (e.target.value === \"miejski\") {\r\n      setTitle(\" - miejski\");\r\n      OrderService.getRowerMiejskiUnavailiable().then((response) => {\r\n        var len = response.data.length;\r\n        setAvailiableQuantity(availiableQuantityMax - len);\r\n      });\r\n      setItemIdDb(25);\r\n    }\r\n  };\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Rower{title}{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <h2>Rodzaj:</h2>\r\n                    <Form.Control\r\n                      id=\"type\"\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={onTypeChange}\r\n                    >\r\n                      <option>kolażówka</option>\r\n                      <option>górski</option>\r\n                      <option>miejski</option>\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option disabled={!options.includes(option)} \r\n                            key={index}\r\n                            className={\r\n                              options.includes(option) ? \"\" : \"select-disabled disabled\"\r\n                            }>\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderRower;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderStadion.js",["289","290","291"],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderZestawDoHokeja.js",["292","293"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderZestawDoHokeja() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 8;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 39;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getZestawDoHokejaUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getZestawDoHokejaBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Zestaw do hokeja{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option\r\n                            disabled={!options.includes(option)}\r\n                            key={index}\r\n                            className={\r\n                              options.includes(option)\r\n                                ? \"\"\r\n                                : \"select-disabled disabled\"\r\n                            }\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderZestawDoHokeja;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderZestawWspinaczkowy.js",["294","295"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderWspinaczkowy() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 2;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 50;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getZestawDoWspinaczkiUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getZestawDoWspinaczkiBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Zestaw wspinaczkowy{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option\r\n                            disabled={!options.includes(option)}\r\n                            key={index}\r\n                            className={\r\n                              options.includes(option)\r\n                                ? \"\"\r\n                                : \"select-disabled disabled\"\r\n                            }\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderWspinaczkowy;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderSzynaCmp.js",["296","297","298","299"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction OrderSzynaCmp() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 1;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 31;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getSzynaCmpUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getSzynaCmpBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>Szyna CMP{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderSzynaCmp;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderWorekTreningowy.js",["300","301","302"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { clearMessage } from \"../../actions/message\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #type {\r\n      width: 200px;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderWorekTreningowy() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 2;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const [itemIdDb, setItemIdDb] = useState(32);\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const [title, setTitle] = useState(\" - worek\");\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getWorekTreningowyUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const changePrice = (id) => {\r\n    ProductService.getItemPrice(id).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n  };\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    if (itemIdDb === 32) {\r\n      OrderService.getWorekTreningowyBusy(\r\n        moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n        moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n      ).then((response) => {\r\n        setBusyProducts(response.data);\r\n        setBusyProductCount(response.data.length);\r\n      });\r\n    }\r\n    if (itemIdDb === 34) {\r\n      OrderService.getGruszkaBusy(\r\n        moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n        moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n      ).then((response) => {\r\n        setBusyProducts(response.data);\r\n        setBusyProductCount(response.data.length);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    console.log(orderableCount);\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const onTypeChange = (e) => {\r\n    dispatch(clearMessage());\r\n    if (e.target.value === \"gruszka\") {\r\n      setTitle(\" - gruszka\");\r\n      changePrice(34);\r\n      OrderService.getGruszkaUnavailiable().then((response) => {\r\n        var len = response.data.length;\r\n        setAvailiableQuantity(availiableQuantityMax - len);\r\n      });\r\n      setItemIdDb(34);\r\n    }\r\n    if (e.target.value === \"worek treningowy\") {\r\n      setTitle(\" - worek\");\r\n      changePrice(32);\r\n      OrderService.getWorekTreningowyUnavailiable().then((response) => {\r\n        var len = response.data.length;\r\n        setAvailiableQuantity(availiableQuantityMax - len);\r\n      });\r\n      setItemIdDb(32);\r\n    }\r\n  };\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Worek treningowy{title}{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <h2>Rodzaj:</h2>\r\n                    <Form.Control\r\n                      id=\"type\"\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={onTypeChange}\r\n                    >\r\n                      <option>worek treningowy</option>\r\n                      <option>gruszka</option>\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option\r\n                            disabled={!options.includes(option)}\r\n                            key={index}\r\n                            className={\r\n                              options.includes(option)\r\n                                ? \"\"\r\n                                : \"select-disabled disabled\"\r\n                            }\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderWorekTreningowy;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\message.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderZestawSnowboardowy.js",["303","304"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderZestawSnowboardowy() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 3;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 47;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2, 3];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getZestawDoSnowboarduUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getZestawDoSnowboarduBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Zestaw snowboardowy{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option\r\n                            disabled={!options.includes(option)}\r\n                            key={index}\r\n                            className={\r\n                              options.includes(option)\r\n                                ? \"\"\r\n                                : \"select-disabled disabled\"\r\n                            }\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderZestawSnowboardowy;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\helpers\\history.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderHala.js",["305","306"],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\orders\\OrderZestawDoNart.js",["307","308"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Calendar from \"react-calendar\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Button, Row, Col, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nimport ProductService from \"../../services/product.service\";\r\nimport OrderService from \"../../services/order.service\";\r\n\r\nimport { messageAddOrder } from \"../../actions/order\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst Styles = styled.div`\r\n  .container {\r\n    display: flex;\r\n    margin-top: 80px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .if-alert {\r\n      margin: 150px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 40px;\r\n    }\r\n\r\n    #submitButton {\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .row {\r\n      dispaly: flex;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        font-size: large;\r\n      }\r\n\r\n      h3 {\r\n        font-size: medium;\r\n      }\r\n    }\r\n\r\n    .col {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #price-col {\r\n      width: 300px;\r\n    }\r\n  }\r\n  .select-disabled {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nfunction OrderZestawDoNart() {\r\n  const [access, setAccess] = useState(false);\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [myDate, setMyDate] = useState(new Date());\r\n  const [itemCount, setItemCount] = useState(1);\r\n  const [daysCount, setDaysCount] = useState(1);\r\n  const availiableQuantityMax = 3;\r\n  const [availiableQuantity, setAvailiableQuantity] = useState(\r\n    availiableQuantityMax\r\n  );\r\n  const [btnDisabled, setBtnDisabled] = useState(false);\r\n  const [busyProducts, setBusyProducts] = useState(0);\r\n  const [busyProductCount, setBusyProductCount] = useState(0);\r\n  const itemIdDb = 36;\r\n  const [price, setPrice] = useState(0);\r\n  const [success, setSuccess] = useState(false);\r\n  const { message } = useSelector((state) => state.message);\r\n  const [options, setOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n  let totalPrice = price * daysCount * itemCount;\r\n  const availiableOptions = [1, 2, 3];\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setAccess(currentUser.roles.includes(\"ROLE_USER\"));\r\n    }\r\n    ProductService.getItemPrice(itemIdDb).then((response) => {\r\n      setPrice(response.data);\r\n    });\r\n    OrderService.getZestawDoNartUnavailiable().then((response) => {\r\n      var len = response.data.length;\r\n      setAvailiableQuantity(availiableQuantityMax - len);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const getUniqueBusyProductCount = () => {\r\n    OrderService.getZestawDoNartBusy(\r\n      moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\")\r\n    ).then((response) => {\r\n      setBusyProducts(response.data);\r\n      setBusyProductCount(response.data.length);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, [busyProductCount]);\r\n\r\n  const getOptions = () => {\r\n    var optionsTemp = [];\r\n    var orderableCount = availiableQuantity - busyProductCount;\r\n    if (orderableCount) {\r\n      setBtnDisabled(false);\r\n      for (var i = 0; i < orderableCount; i++) {\r\n        optionsTemp.push(i + 1);\r\n      }\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n    setOptions(optionsTemp);\r\n  };\r\n\r\n  const onChange = (date) => {\r\n    setMyDate(date);\r\n    let diffTime = Math.abs(date[1] - date[0]);\r\n    setDaysCount(Math.ceil(diffTime / (1000 * 60 * 60 * 24)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUniqueBusyProductCount();\r\n  }, [myDate]);\r\n\r\n  const sendRequest = () => {\r\n    var data = {\r\n      id: 1,\r\n      rentDateFrom: moment(myDate[0]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      rentDateTo: moment(myDate[1]).format(\"YYYY-MM-DD HH:mm:ss:SSS\"),\r\n      price: totalPrice,\r\n      userId: currentUser.id,\r\n      productId: itemIdDb,\r\n      quantity: itemCount,\r\n      disabledProducts: busyProducts,\r\n      productsCount: availiableQuantityMax,\r\n    };\r\n    dispatch(messageAddOrder(data));\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (availiableQuantity) {\r\n      setBtnDisabled(false);\r\n    } else {\r\n      setBtnDisabled(true);\r\n    }\r\n  }, [availiableQuantity]);\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <div>\r\n          {success ? (\r\n            <Styles>\r\n              <Container>\r\n                <Alert className=\"if-alert\" variant=\"success\">\r\n                  {message}\r\n                </Alert>\r\n              </Container>\r\n            </Styles>\r\n          ) : (\r\n            <Styles>\r\n              <Container>\r\n                <h1>\r\n                  Zestaw do nart{\" \"}\r\n                  {availiableQuantity ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <span>(aktualnie niedostępny)</span>\r\n                  )}\r\n                </h1>\r\n                {btnDisabled && availiableQuantity ? (\r\n                  <Alert variant=\"warning\">Niedostępny w tym terminie!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Row>\r\n                  <Col>\r\n                    <Calendar\r\n                      onChange={onChange}\r\n                      value={myDate}\r\n                      minDate={new Date()}\r\n                      selectRange={true}\r\n                      returnValue={\"range\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <h2>Ilość sztuk:</h2>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      as=\"select\"\r\n                      onChange={(e) => setItemCount(e.target.value)}\r\n                    >\r\n                      {availiableOptions.map((option, index) => {\r\n                        return (\r\n                          <option\r\n                            disabled={!options.includes(option)}\r\n                            key={index}\r\n                            className={\r\n                              options.includes(option)\r\n                                ? \"\"\r\n                                : \"select-disabled disabled\"\r\n                            }\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col id=\"price-col\">\r\n                    <h2>Cena za {daysCount} dni:</h2>\r\n                    <h3>{totalPrice}zł</h3>\r\n                  </Col>\r\n                </Row>\r\n                <Button\r\n                  id=\"submitButton\"\r\n                  type=\"submit\"\r\n                  onClick={sendRequest}\r\n                  disabled={btnDisabled ? true : false}\r\n                >\r\n                  Zarezerwuj\r\n                </Button>\r\n              </Container>\r\n            </Styles>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Styles>\r\n          <Container>\r\n            <Alert className=\"if-alert\" variant=\"danger\">\r\n              Musisz być zalogowany, by dokonać zamówienia!\r\n            </Alert>\r\n          </Container>\r\n        </Styles>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderZestawDoNart;\r\n","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\admin.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\Categories.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\auth.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\order.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\Jumbotron.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\types.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\admin.service.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\product.service.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\reducers\\message.js",["309"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_MESSAGE:\r\n            return { message: payload };\r\n\r\n        case CLEAR_MESSAGE:\r\n            return { message: \"\" };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\reducers\\auth.js",["310"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        case REGISTER_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: payload.user,\r\n            };\r\n        case LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\order.service.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\auth.service.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\auth-header.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\OrderList.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\services\\user.service.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\views\\Profile.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\actions\\user.js",[],"C:\\Users\\mlodz\\moje_projekty\\sport-rental\\frontend\\src\\components\\NavigationBar.js",[],{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","severity":1,"message":"316","line":19,"column":10,"nodeType":"317","messageId":"318","endLine":19,"endColumn":20},{"ruleId":"319","severity":1,"message":"320","line":103,"column":6,"nodeType":"321","endLine":103,"endColumn":24,"suggestions":"322"},{"ruleId":"319","severity":1,"message":"323","line":107,"column":6,"nodeType":"321","endLine":107,"endColumn":14,"suggestions":"324"},{"ruleId":"315","severity":1,"message":"325","line":67,"column":21,"nodeType":"317","messageId":"318","endLine":67,"endColumn":33},{"ruleId":"315","severity":1,"message":"326","line":80,"column":10,"nodeType":"317","messageId":"318","endLine":80,"endColumn":17},{"ruleId":"319","severity":1,"message":"320","line":109,"column":6,"nodeType":"321","endLine":109,"endColumn":24,"suggestions":"327"},{"ruleId":"319","severity":1,"message":"323","line":133,"column":6,"nodeType":"321","endLine":133,"endColumn":14,"suggestions":"328"},{"ruleId":"319","severity":1,"message":"329","line":130,"column":6,"nodeType":"321","endLine":130,"endColumn":14,"suggestions":"330"},{"ruleId":"319","severity":1,"message":"331","line":177,"column":6,"nodeType":"321","endLine":177,"endColumn":24,"suggestions":"332"},{"ruleId":"319","severity":1,"message":"320","line":113,"column":6,"nodeType":"321","endLine":113,"endColumn":24,"suggestions":"333"},{"ruleId":"319","severity":1,"message":"323","line":137,"column":6,"nodeType":"321","endLine":137,"endColumn":14,"suggestions":"334"},{"ruleId":"319","severity":1,"message":"320","line":113,"column":6,"nodeType":"321","endLine":113,"endColumn":24,"suggestions":"335"},{"ruleId":"319","severity":1,"message":"323","line":137,"column":6,"nodeType":"321","endLine":137,"endColumn":14,"suggestions":"336"},{"ruleId":"319","severity":1,"message":"320","line":113,"column":6,"nodeType":"321","endLine":113,"endColumn":24,"suggestions":"337"},{"ruleId":"319","severity":1,"message":"323","line":137,"column":6,"nodeType":"321","endLine":137,"endColumn":14,"suggestions":"338"},{"ruleId":"319","severity":1,"message":"329","line":106,"column":6,"nodeType":"321","endLine":106,"endColumn":19,"suggestions":"339"},{"ruleId":"319","severity":1,"message":"320","line":140,"column":6,"nodeType":"321","endLine":140,"endColumn":24,"suggestions":"340"},{"ruleId":"319","severity":1,"message":"323","line":165,"column":6,"nodeType":"321","endLine":165,"endColumn":14,"suggestions":"341"},{"ruleId":"315","severity":1,"message":"342","line":78,"column":20,"nodeType":"317","messageId":"318","endLine":78,"endColumn":31},{"ruleId":"319","severity":1,"message":"329","line":122,"column":6,"nodeType":"321","endLine":122,"endColumn":14,"suggestions":"343"},{"ruleId":"319","severity":1,"message":"331","line":169,"column":6,"nodeType":"321","endLine":169,"endColumn":24,"suggestions":"344"},{"ruleId":"319","severity":1,"message":"320","line":113,"column":6,"nodeType":"321","endLine":113,"endColumn":24,"suggestions":"345"},{"ruleId":"319","severity":1,"message":"323","line":137,"column":6,"nodeType":"321","endLine":137,"endColumn":14,"suggestions":"346"},{"ruleId":"319","severity":1,"message":"320","line":113,"column":6,"nodeType":"321","endLine":113,"endColumn":24,"suggestions":"347"},{"ruleId":"319","severity":1,"message":"323","line":137,"column":6,"nodeType":"321","endLine":137,"endColumn":14,"suggestions":"348"},{"ruleId":"315","severity":1,"message":"325","line":67,"column":21,"nodeType":"317","messageId":"318","endLine":67,"endColumn":33},{"ruleId":"315","severity":1,"message":"326","line":80,"column":10,"nodeType":"317","messageId":"318","endLine":80,"endColumn":17},{"ruleId":"319","severity":1,"message":"320","line":109,"column":6,"nodeType":"321","endLine":109,"endColumn":24,"suggestions":"349"},{"ruleId":"319","severity":1,"message":"323","line":133,"column":6,"nodeType":"321","endLine":133,"endColumn":14,"suggestions":"350"},{"ruleId":"319","severity":1,"message":"329","line":106,"column":6,"nodeType":"321","endLine":106,"endColumn":19,"suggestions":"351"},{"ruleId":"319","severity":1,"message":"320","line":137,"column":6,"nodeType":"321","endLine":137,"endColumn":24,"suggestions":"352"},{"ruleId":"319","severity":1,"message":"323","line":162,"column":6,"nodeType":"321","endLine":162,"endColumn":14,"suggestions":"353"},{"ruleId":"319","severity":1,"message":"320","line":113,"column":6,"nodeType":"321","endLine":113,"endColumn":24,"suggestions":"354"},{"ruleId":"319","severity":1,"message":"323","line":137,"column":6,"nodeType":"321","endLine":137,"endColumn":14,"suggestions":"355"},{"ruleId":"319","severity":1,"message":"329","line":130,"column":6,"nodeType":"321","endLine":130,"endColumn":14,"suggestions":"356"},{"ruleId":"319","severity":1,"message":"331","line":177,"column":6,"nodeType":"321","endLine":177,"endColumn":24,"suggestions":"357"},{"ruleId":"319","severity":1,"message":"320","line":113,"column":6,"nodeType":"321","endLine":113,"endColumn":24,"suggestions":"358"},{"ruleId":"319","severity":1,"message":"323","line":137,"column":6,"nodeType":"321","endLine":137,"endColumn":14,"suggestions":"359"},{"ruleId":"360","severity":1,"message":"361","line":5,"column":1,"nodeType":"362","endLine":18,"endColumn":2},{"ruleId":"360","severity":1,"message":"361","line":15,"column":1,"nodeType":"362","endLine":50,"endColumn":2},"no-native-reassign",["363"],"no-negated-in-lhs",["364"],"no-unused-vars","'setMessage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.","ArrayExpression",["365"],"React Hook useEffect has a missing dependency: 'getUniqueBusyProductCount'. Either include it or remove the dependency array.",["366"],"'setItemCount' is assigned a value but never used.","'options' is assigned a value but never used.",["367"],["368"],"React Hook useEffect has a missing dependency: 'itemIdDb'. Either include it or remove the dependency array.",["369"],"React Hook useEffect has a missing dependency: 'disabledOptions.length'. Either include it or remove the dependency array.",["370"],["371"],["372"],["373"],["374"],["375"],["376"],["377"],["378"],["379"],"'setItemIdDb' is assigned a value but never used.",["380"],["381"],["382"],["383"],["384"],["385"],["386"],["387"],["388"],["389"],["390"],["391"],["392"],["393"],["394"],["395"],["396"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"397","fix":"401"},{"desc":"399","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"397","fix":"407"},{"desc":"399","fix":"408"},{"desc":"397","fix":"409"},{"desc":"399","fix":"410"},{"desc":"397","fix":"411"},{"desc":"399","fix":"412"},{"desc":"413","fix":"414"},{"desc":"397","fix":"415"},{"desc":"399","fix":"416"},{"desc":"403","fix":"417"},{"desc":"405","fix":"418"},{"desc":"397","fix":"419"},{"desc":"399","fix":"420"},{"desc":"397","fix":"421"},{"desc":"399","fix":"422"},{"desc":"397","fix":"423"},{"desc":"399","fix":"424"},{"desc":"413","fix":"425"},{"desc":"397","fix":"426"},{"desc":"399","fix":"427"},{"desc":"397","fix":"428"},{"desc":"399","fix":"429"},{"desc":"403","fix":"430"},{"desc":"405","fix":"431"},{"desc":"397","fix":"432"},{"desc":"399","fix":"433"},"Update the dependencies array to be: [busyProductCount, getOptions]",{"range":"434","text":"435"},"Update the dependencies array to be: [getUniqueBusyProductCount, myDate]",{"range":"436","text":"437"},{"range":"438","text":"435"},{"range":"439","text":"437"},"Update the dependencies array to be: [itemIdDb, myDate]",{"range":"440","text":"441"},"Update the dependencies array to be: [busyProductCount, disabledOptions.length]",{"range":"442","text":"443"},{"range":"444","text":"435"},{"range":"445","text":"437"},{"range":"446","text":"435"},{"range":"447","text":"437"},{"range":"448","text":"435"},{"range":"449","text":"437"},"Update the dependencies array to be: [currentUser, itemIdDb]",{"range":"450","text":"451"},{"range":"452","text":"435"},{"range":"453","text":"437"},{"range":"454","text":"441"},{"range":"455","text":"443"},{"range":"456","text":"435"},{"range":"457","text":"437"},{"range":"458","text":"435"},{"range":"459","text":"437"},{"range":"460","text":"435"},{"range":"461","text":"437"},{"range":"462","text":"451"},{"range":"463","text":"435"},{"range":"464","text":"437"},{"range":"465","text":"435"},{"range":"466","text":"437"},{"range":"467","text":"441"},{"range":"468","text":"443"},{"range":"469","text":"435"},{"range":"470","text":"437"},[2644,2662],"[busyProductCount, getOptions]",[2728,2736],"[getUniqueBusyProductCount, myDate]",[2872,2890],[3491,3499],[3156,3164],"[itemIdDb, myDate]",[4190,4208],"[busyProductCount, disabledOptions.length]",[2972,2990],[3591,3599],[2992,3010],[3611,3619],[3003,3021],[3622,3630],[2765,2778],"[currentUser, itemIdDb]",[3882,3900],[4511,4519],[3015,3023],[4049,4067],[3015,3033],[3634,3642],[3003,3021],[3622,3630],[2866,2884],[3485,3493],[2772,2785],[3693,3711],[4346,4354],[3012,3030],[3631,3639],[3157,3165],[4191,4209],[2994,3012],[3613,3621]]